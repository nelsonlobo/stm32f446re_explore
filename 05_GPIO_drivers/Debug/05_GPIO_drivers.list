
05_GPIO_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000834  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009f8  08000a00  00001a00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009f8  080009f8  00001a00  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080009f8  080009f8  00001a00  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080009f8  08000a00  00001a00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009f8  080009f8  000019f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080009fc  080009fc  000019fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001a00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a00  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a00  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00001a00  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000ab6  00000000  00000000  00001a2a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002ce  00000000  00000000  000024e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  000027b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000008c  00000000  00000000  00002878  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002552  00000000  00000000  00002904  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000010f5  00000000  00000000  00004e56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009257  00000000  00000000  00005f4b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000f1a2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0000f1e8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006e  00000000  00000000  0000f470  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080009e0 	.word	0x080009e0

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080009e0 	.word	0x080009e0

08000204 <main>:
{
	for(uint32_t i = 0; i< 500000;i++);
}

int main (void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed,GpioBtn;
	memset(&GpioLed,0,sizeof(GpioLed));
 800020a:	f107 030c 	add.w	r3, r7, #12
 800020e:	220c      	movs	r2, #12
 8000210:	2100      	movs	r1, #0
 8000212:	4618      	mov	r0, r3
 8000214:	f000 fbb8 	bl	8000988 <memset>
	memset(&GpioBtn,0,sizeof(GpioBtn));
 8000218:	463b      	mov	r3, r7
 800021a:	220c      	movs	r2, #12
 800021c:	2100      	movs	r1, #0
 800021e:	4618      	mov	r0, r3
 8000220:	f000 fbb2 	bl	8000988 <memset>

	//Configure the LED GPIO pin
	GpioLed.pGPIOx = GPIOA;
 8000224:	4b18      	ldr	r3, [pc, #96]	@ (8000288 <main+0x84>)
 8000226:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NUM5;
 8000228:	2305      	movs	r3, #5
 800022a:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 800022c:	2301      	movs	r3, #1
 800022e:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000230:	2302      	movs	r3, #2
 8000232:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000234:	2300      	movs	r3, #0
 8000236:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000238:	2300      	movs	r3, #0
 800023a:	74fb      	strb	r3, [r7, #19]

	GPIO_PClk_Ctrl(GPIOA, ENABLE);
 800023c:	2101      	movs	r1, #1
 800023e:	4812      	ldr	r0, [pc, #72]	@ (8000288 <main+0x84>)
 8000240:	f000 f85e 	bl	8000300 <GPIO_PClk_Ctrl>
	GPIO_Init(&GpioLed);
 8000244:	f107 030c 	add.w	r3, r7, #12
 8000248:	4618      	mov	r0, r3
 800024a:	f000 f929 	bl	80004a0 <GPIO_Init>

	//Configure the User button GPIO pin
	GpioBtn.pGPIOx = GPIOC;
 800024e:	4b0f      	ldr	r3, [pc, #60]	@ (800028c <main+0x88>)
 8000250:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NUM13;
 8000252:	230d      	movs	r3, #13
 8000254:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000256:	2305      	movs	r3, #5
 8000258:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800025a:	2302      	movs	r3, #2
 800025c:	71bb      	strb	r3, [r7, #6]
//	GpioBtn.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;	//Not applicable in input mode
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 800025e:	2301      	movs	r3, #1
 8000260:	71fb      	strb	r3, [r7, #7]

	GPIO_PClk_Ctrl(GPIOC, ENABLE);
 8000262:	2101      	movs	r1, #1
 8000264:	4809      	ldr	r0, [pc, #36]	@ (800028c <main+0x88>)
 8000266:	f000 f84b 	bl	8000300 <GPIO_PClk_Ctrl>
	GPIO_Init(&GpioBtn);
 800026a:	463b      	mov	r3, r7
 800026c:	4618      	mov	r0, r3
 800026e:	f000 f917 	bl	80004a0 <GPIO_Init>
	 * interrupt to be generated on Port C pin 13 the user button.
	 * Since Pin 13 falls between 10 and 15 we set the IRQ_EXTI15_10
	 * register on the NVIC. We are setting a random value for priority
	 * which in this case is 7.
	 */
	GPIO_IRQPriorityConfig(IRQN_EXIT15_10,NVIC_IRQ_PRIO7);
 8000272:	2107      	movs	r1, #7
 8000274:	2028      	movs	r0, #40	@ 0x28
 8000276:	f000 fb3d 	bl	80008f4 <GPIO_IRQPriorityConfig>
	 * by the NVIC which are organized in 4 bytes per IPRx register.
	 * Hence EXTI15_10 i.e. 40 is assigned to IPR10 register's first byte.
	 * Hence we select ISER1 which falls between 32-63 ISER value.
	 *
	 */
	GPIO_IRQConfig(IRQN_EXIT15_10,ENABLE);
 800027a:	2101      	movs	r1, #1
 800027c:	2028      	movs	r0, #40	@ 0x28
 800027e:	f000 fab5 	bl	80007ec <GPIO_IRQConfig>

	while(1)
 8000282:	bf00      	nop
 8000284:	e7fd      	b.n	8000282 <main+0x7e>
 8000286:	bf00      	nop
 8000288:	40020000 	.word	0x40020000
 800028c:	40020800 	.word	0x40020800

08000290 <EXTI15_10_IRQHandler>:
	return 0;
}


void EXTI15_10_IRQHandler(void)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NUM13);
 8000294:	200d      	movs	r0, #13
 8000296:	f000 fb57 	bl	8000948 <GPIO_IRQHandling>
	GPIO_TogglePin(GPIOA,GPIO_PIN_NUM5);
 800029a:	2105      	movs	r1, #5
 800029c:	4802      	ldr	r0, [pc, #8]	@ (80002a8 <EXTI15_10_IRQHandler+0x18>)
 800029e:	f000 fa91 	bl	80007c4 <GPIO_TogglePin>
}
 80002a2:	bf00      	nop
 80002a4:	bd80      	pop	{r7, pc}
 80002a6:	bf00      	nop
 80002a8:	40020000 	.word	0x40020000

080002ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002ac:	480d      	ldr	r0, [pc, #52]	@ (80002e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b4:	480c      	ldr	r0, [pc, #48]	@ (80002e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002b6:	490d      	ldr	r1, [pc, #52]	@ (80002ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b8:	4a0d      	ldr	r2, [pc, #52]	@ (80002f0 <LoopForever+0xe>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002bc:	e002      	b.n	80002c4 <LoopCopyDataInit>

080002be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c2:	3304      	adds	r3, #4

080002c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c8:	d3f9      	bcc.n	80002be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ca:	4a0a      	ldr	r2, [pc, #40]	@ (80002f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002cc:	4c0a      	ldr	r4, [pc, #40]	@ (80002f8 <LoopForever+0x16>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d0:	e001      	b.n	80002d6 <LoopFillZerobss>

080002d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d4:	3204      	adds	r2, #4

080002d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d8:	d3fb      	bcc.n	80002d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002da:	f000 fb5d 	bl	8000998 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002de:	f7ff ff91 	bl	8000204 <main>

080002e2 <LoopForever>:

LoopForever:
  b LoopForever
 80002e2:	e7fe      	b.n	80002e2 <LoopForever>
  ldr   r0, =_estack
 80002e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002f0:	08000a00 	.word	0x08000a00
  ldr r2, =_sbss
 80002f4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f8:	2000001c 	.word	0x2000001c

080002fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002fc:	e7fe      	b.n	80002fc <ADC_IRQHandler>
	...

08000300 <GPIO_PClk_Ctrl>:
 * @return	- none
 *
 * @note	- none
 */
void GPIO_PClk_Ctrl(GPIO_RegDef_t *pGPIOx, uint8_t status)
{
 8000300:	b480      	push	{r7}
 8000302:	b083      	sub	sp, #12
 8000304:	af00      	add	r7, sp, #0
 8000306:	6078      	str	r0, [r7, #4]
 8000308:	460b      	mov	r3, r1
 800030a:	70fb      	strb	r3, [r7, #3]
	if(status == ENABLE)
 800030c:	78fb      	ldrb	r3, [r7, #3]
 800030e:	2b01      	cmp	r3, #1
 8000310:	d157      	bne.n	80003c2 <GPIO_PClk_Ctrl+0xc2>
	{
		if(pGPIOx == GPIOA)
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4a59      	ldr	r2, [pc, #356]	@ (800047c <GPIO_PClk_Ctrl+0x17c>)
 8000316:	4293      	cmp	r3, r2
 8000318:	d106      	bne.n	8000328 <GPIO_PClk_Ctrl+0x28>
		{
			GPIOA_PCLK_EN();
 800031a:	4b59      	ldr	r3, [pc, #356]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 800031c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800031e:	4a58      	ldr	r2, [pc, #352]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000320:	f043 0301 	orr.w	r3, r3, #1
 8000324:	6313      	str	r3, [r2, #48]	@ 0x30
		else
		{
//			#error "GPIO Port Does not exist"
		}
	}
}
 8000326:	e0a3      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOB)
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	4a56      	ldr	r2, [pc, #344]	@ (8000484 <GPIO_PClk_Ctrl+0x184>)
 800032c:	4293      	cmp	r3, r2
 800032e:	d106      	bne.n	800033e <GPIO_PClk_Ctrl+0x3e>
			GPIOB_PCLK_EN();
 8000330:	4b53      	ldr	r3, [pc, #332]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000332:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000334:	4a52      	ldr	r2, [pc, #328]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000336:	f043 0302 	orr.w	r3, r3, #2
 800033a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800033c:	e098      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOC)
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a51      	ldr	r2, [pc, #324]	@ (8000488 <GPIO_PClk_Ctrl+0x188>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d106      	bne.n	8000354 <GPIO_PClk_Ctrl+0x54>
			GPIOC_PCLK_EN();
 8000346:	4b4e      	ldr	r3, [pc, #312]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000348:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800034a:	4a4d      	ldr	r2, [pc, #308]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 800034c:	f043 0304 	orr.w	r3, r3, #4
 8000350:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000352:	e08d      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOD)
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	4a4d      	ldr	r2, [pc, #308]	@ (800048c <GPIO_PClk_Ctrl+0x18c>)
 8000358:	4293      	cmp	r3, r2
 800035a:	d106      	bne.n	800036a <GPIO_PClk_Ctrl+0x6a>
			GPIOD_PCLK_EN();
 800035c:	4b48      	ldr	r3, [pc, #288]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 800035e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000360:	4a47      	ldr	r2, [pc, #284]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000362:	f043 0308 	orr.w	r3, r3, #8
 8000366:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000368:	e082      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOE)
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	4a48      	ldr	r2, [pc, #288]	@ (8000490 <GPIO_PClk_Ctrl+0x190>)
 800036e:	4293      	cmp	r3, r2
 8000370:	d106      	bne.n	8000380 <GPIO_PClk_Ctrl+0x80>
			GPIOE_PCLK_EN();
 8000372:	4b43      	ldr	r3, [pc, #268]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000374:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000376:	4a42      	ldr	r2, [pc, #264]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000378:	f043 0310 	orr.w	r3, r3, #16
 800037c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800037e:	e077      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOF)
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	4a44      	ldr	r2, [pc, #272]	@ (8000494 <GPIO_PClk_Ctrl+0x194>)
 8000384:	4293      	cmp	r3, r2
 8000386:	d106      	bne.n	8000396 <GPIO_PClk_Ctrl+0x96>
			GPIOF_PCLK_EN();
 8000388:	4b3d      	ldr	r3, [pc, #244]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 800038a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800038c:	4a3c      	ldr	r2, [pc, #240]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 800038e:	f043 0320 	orr.w	r3, r3, #32
 8000392:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000394:	e06c      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOG)
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	4a3f      	ldr	r2, [pc, #252]	@ (8000498 <GPIO_PClk_Ctrl+0x198>)
 800039a:	4293      	cmp	r3, r2
 800039c:	d106      	bne.n	80003ac <GPIO_PClk_Ctrl+0xac>
			GPIOG_PCLK_EN();
 800039e:	4b38      	ldr	r3, [pc, #224]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 80003a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003a2:	4a37      	ldr	r2, [pc, #220]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 80003a4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80003a8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003aa:	e061      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOH)
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	4a3b      	ldr	r2, [pc, #236]	@ (800049c <GPIO_PClk_Ctrl+0x19c>)
 80003b0:	4293      	cmp	r3, r2
 80003b2:	d15d      	bne.n	8000470 <GPIO_PClk_Ctrl+0x170>
			GPIOH_PCLK_EN();
 80003b4:	4b32      	ldr	r3, [pc, #200]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 80003b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003b8:	4a31      	ldr	r2, [pc, #196]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 80003ba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003be:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003c0:	e056      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		if(pGPIOx == GPIOA)
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4a2d      	ldr	r2, [pc, #180]	@ (800047c <GPIO_PClk_Ctrl+0x17c>)
 80003c6:	4293      	cmp	r3, r2
 80003c8:	d106      	bne.n	80003d8 <GPIO_PClk_Ctrl+0xd8>
			GPIOA_PCLK_DIS();
 80003ca:	4b2d      	ldr	r3, [pc, #180]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 80003cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ce:	4a2c      	ldr	r2, [pc, #176]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 80003d0:	f023 0301 	bic.w	r3, r3, #1
 80003d4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003d6:	e04b      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOB)
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	4a2a      	ldr	r2, [pc, #168]	@ (8000484 <GPIO_PClk_Ctrl+0x184>)
 80003dc:	4293      	cmp	r3, r2
 80003de:	d106      	bne.n	80003ee <GPIO_PClk_Ctrl+0xee>
			GPIOB_PCLK_DIS();
 80003e0:	4b27      	ldr	r3, [pc, #156]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 80003e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003e4:	4a26      	ldr	r2, [pc, #152]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 80003e6:	f023 0302 	bic.w	r3, r3, #2
 80003ea:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ec:	e040      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOC)
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	4a25      	ldr	r2, [pc, #148]	@ (8000488 <GPIO_PClk_Ctrl+0x188>)
 80003f2:	4293      	cmp	r3, r2
 80003f4:	d106      	bne.n	8000404 <GPIO_PClk_Ctrl+0x104>
			GPIOC_PCLK_DIS();
 80003f6:	4b22      	ldr	r3, [pc, #136]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 80003f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003fa:	4a21      	ldr	r2, [pc, #132]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 80003fc:	f023 0304 	bic.w	r3, r3, #4
 8000400:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000402:	e035      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOD)
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	4a21      	ldr	r2, [pc, #132]	@ (800048c <GPIO_PClk_Ctrl+0x18c>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d106      	bne.n	800041a <GPIO_PClk_Ctrl+0x11a>
			GPIOD_PCLK_DIS();
 800040c:	4b1c      	ldr	r3, [pc, #112]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 800040e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000410:	4a1b      	ldr	r2, [pc, #108]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000412:	f023 0308 	bic.w	r3, r3, #8
 8000416:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000418:	e02a      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOE)
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	4a1c      	ldr	r2, [pc, #112]	@ (8000490 <GPIO_PClk_Ctrl+0x190>)
 800041e:	4293      	cmp	r3, r2
 8000420:	d106      	bne.n	8000430 <GPIO_PClk_Ctrl+0x130>
			GPIOE_PCLK_DIS();
 8000422:	4b17      	ldr	r3, [pc, #92]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000424:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000426:	4a16      	ldr	r2, [pc, #88]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000428:	f023 0310 	bic.w	r3, r3, #16
 800042c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800042e:	e01f      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOF)
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	4a18      	ldr	r2, [pc, #96]	@ (8000494 <GPIO_PClk_Ctrl+0x194>)
 8000434:	4293      	cmp	r3, r2
 8000436:	d106      	bne.n	8000446 <GPIO_PClk_Ctrl+0x146>
			GPIOF_PCLK_DIS();
 8000438:	4b11      	ldr	r3, [pc, #68]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 800043a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800043c:	4a10      	ldr	r2, [pc, #64]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 800043e:	f023 0320 	bic.w	r3, r3, #32
 8000442:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000444:	e014      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOG)
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	4a13      	ldr	r2, [pc, #76]	@ (8000498 <GPIO_PClk_Ctrl+0x198>)
 800044a:	4293      	cmp	r3, r2
 800044c:	d106      	bne.n	800045c <GPIO_PClk_Ctrl+0x15c>
			GPIOG_PCLK_DIS();
 800044e:	4b0c      	ldr	r3, [pc, #48]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000450:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000452:	4a0b      	ldr	r2, [pc, #44]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000454:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000458:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800045a:	e009      	b.n	8000470 <GPIO_PClk_Ctrl+0x170>
		else if(pGPIOx == GPIOH)
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	4a0f      	ldr	r2, [pc, #60]	@ (800049c <GPIO_PClk_Ctrl+0x19c>)
 8000460:	4293      	cmp	r3, r2
 8000462:	d105      	bne.n	8000470 <GPIO_PClk_Ctrl+0x170>
			GPIOH_PCLK_DIS();
 8000464:	4b06      	ldr	r3, [pc, #24]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 8000466:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000468:	4a05      	ldr	r2, [pc, #20]	@ (8000480 <GPIO_PClk_Ctrl+0x180>)
 800046a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800046e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000470:	bf00      	nop
 8000472:	370c      	adds	r7, #12
 8000474:	46bd      	mov	sp, r7
 8000476:	bc80      	pop	{r7}
 8000478:	4770      	bx	lr
 800047a:	bf00      	nop
 800047c:	40020000 	.word	0x40020000
 8000480:	40023800 	.word	0x40023800
 8000484:	40020400 	.word	0x40020400
 8000488:	40020800 	.word	0x40020800
 800048c:	40020c00 	.word	0x40020c00
 8000490:	40021000 	.word	0x40021000
 8000494:	40021400 	.word	0x40021400
 8000498:	40021800 	.word	0x40021800
 800049c:	40021c00 	.word	0x40021c00

080004a0 <GPIO_Init>:
 *
 * @note	- none
 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004a0:	b480      	push	{r7}
 80004a2:	b087      	sub	sp, #28
 80004a4:	af00      	add	r7, sp, #0
 80004a6:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80004a8:	2300      	movs	r3, #0
 80004aa:	617b      	str	r3, [r7, #20]

	//Configure the mode register
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANLG)
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	795b      	ldrb	r3, [r3, #5]
 80004b0:	2b03      	cmp	r3, #3
 80004b2:	d81f      	bhi.n	80004f4 <GPIO_Init+0x54>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	795b      	ldrb	r3, [r3, #5]
 80004b8:	461a      	mov	r2, r3
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	791b      	ldrb	r3, [r3, #4]
 80004be:	005b      	lsls	r3, r3, #1
 80004c0:	fa02 f303 	lsl.w	r3, r2, r3
 80004c4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	681a      	ldr	r2, [r3, #0]
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	791b      	ldrb	r3, [r3, #4]
 80004d0:	4619      	mov	r1, r3
 80004d2:	2303      	movs	r3, #3
 80004d4:	408b      	lsls	r3, r1
 80004d6:	43db      	mvns	r3, r3
 80004d8:	4619      	mov	r1, r3
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	400a      	ands	r2, r1
 80004e0:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	6819      	ldr	r1, [r3, #0]
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	697a      	ldr	r2, [r7, #20]
 80004ee:	430a      	orrs	r2, r1
 80004f0:	601a      	str	r2, [r3, #0]
 80004f2:	e0c2      	b.n	800067a <GPIO_Init+0x1da>
	}
	else
	{
		//Handles the interrupt section
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_FT)
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	795b      	ldrb	r3, [r3, #5]
 80004f8:	2b05      	cmp	r3, #5
 80004fa:	d817      	bhi.n	800052c <GPIO_Init+0x8c>
		{
			//1.Configure the falling edge trigger status register
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004fc:	4b47      	ldr	r3, [pc, #284]	@ (800061c <GPIO_Init+0x17c>)
 80004fe:	68db      	ldr	r3, [r3, #12]
 8000500:	687a      	ldr	r2, [r7, #4]
 8000502:	7912      	ldrb	r2, [r2, #4]
 8000504:	4611      	mov	r1, r2
 8000506:	2201      	movs	r2, #1
 8000508:	408a      	lsls	r2, r1
 800050a:	4611      	mov	r1, r2
 800050c:	4a43      	ldr	r2, [pc, #268]	@ (800061c <GPIO_Init+0x17c>)
 800050e:	430b      	orrs	r3, r1
 8000510:	60d3      	str	r3, [r2, #12]
			//2.Clear respective RTSR bit
			EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000512:	4b42      	ldr	r3, [pc, #264]	@ (800061c <GPIO_Init+0x17c>)
 8000514:	689b      	ldr	r3, [r3, #8]
 8000516:	687a      	ldr	r2, [r7, #4]
 8000518:	7912      	ldrb	r2, [r2, #4]
 800051a:	4611      	mov	r1, r2
 800051c:	2201      	movs	r2, #1
 800051e:	408a      	lsls	r2, r1
 8000520:	43d2      	mvns	r2, r2
 8000522:	4611      	mov	r1, r2
 8000524:	4a3d      	ldr	r2, [pc, #244]	@ (800061c <GPIO_Init+0x17c>)
 8000526:	400b      	ands	r3, r1
 8000528:	6093      	str	r3, [r2, #8]
 800052a:	e035      	b.n	8000598 <GPIO_Init+0xf8>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RT)
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	795b      	ldrb	r3, [r3, #5]
 8000530:	2b04      	cmp	r3, #4
 8000532:	d817      	bhi.n	8000564 <GPIO_Init+0xc4>
		{
			//1.Configure the rising edge trigger status register
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000534:	4b39      	ldr	r3, [pc, #228]	@ (800061c <GPIO_Init+0x17c>)
 8000536:	689b      	ldr	r3, [r3, #8]
 8000538:	687a      	ldr	r2, [r7, #4]
 800053a:	7912      	ldrb	r2, [r2, #4]
 800053c:	4611      	mov	r1, r2
 800053e:	2201      	movs	r2, #1
 8000540:	408a      	lsls	r2, r1
 8000542:	4611      	mov	r1, r2
 8000544:	4a35      	ldr	r2, [pc, #212]	@ (800061c <GPIO_Init+0x17c>)
 8000546:	430b      	orrs	r3, r1
 8000548:	6093      	str	r3, [r2, #8]
			//2.Clear respective FTSR bit
			EXTI->FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800054a:	4b34      	ldr	r3, [pc, #208]	@ (800061c <GPIO_Init+0x17c>)
 800054c:	68db      	ldr	r3, [r3, #12]
 800054e:	687a      	ldr	r2, [r7, #4]
 8000550:	7912      	ldrb	r2, [r2, #4]
 8000552:	4611      	mov	r1, r2
 8000554:	2201      	movs	r2, #1
 8000556:	408a      	lsls	r2, r1
 8000558:	43d2      	mvns	r2, r2
 800055a:	4611      	mov	r1, r2
 800055c:	4a2f      	ldr	r2, [pc, #188]	@ (800061c <GPIO_Init+0x17c>)
 800055e:	400b      	ands	r3, r1
 8000560:	60d3      	str	r3, [r2, #12]
 8000562:	e019      	b.n	8000598 <GPIO_Init+0xf8>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RFT)
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	795b      	ldrb	r3, [r3, #5]
 8000568:	2b06      	cmp	r3, #6
 800056a:	d815      	bhi.n	8000598 <GPIO_Init+0xf8>
		{
			//1.Configure the rising & falling edge trigger status register
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800056c:	4b2b      	ldr	r3, [pc, #172]	@ (800061c <GPIO_Init+0x17c>)
 800056e:	689b      	ldr	r3, [r3, #8]
 8000570:	687a      	ldr	r2, [r7, #4]
 8000572:	7912      	ldrb	r2, [r2, #4]
 8000574:	4611      	mov	r1, r2
 8000576:	2201      	movs	r2, #1
 8000578:	408a      	lsls	r2, r1
 800057a:	4611      	mov	r1, r2
 800057c:	4a27      	ldr	r2, [pc, #156]	@ (800061c <GPIO_Init+0x17c>)
 800057e:	430b      	orrs	r3, r1
 8000580:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000582:	4b26      	ldr	r3, [pc, #152]	@ (800061c <GPIO_Init+0x17c>)
 8000584:	68db      	ldr	r3, [r3, #12]
 8000586:	687a      	ldr	r2, [r7, #4]
 8000588:	7912      	ldrb	r2, [r2, #4]
 800058a:	4611      	mov	r1, r2
 800058c:	2201      	movs	r2, #1
 800058e:	408a      	lsls	r2, r1
 8000590:	4611      	mov	r1, r2
 8000592:	4a22      	ldr	r2, [pc, #136]	@ (800061c <GPIO_Init+0x17c>)
 8000594:	430b      	orrs	r3, r1
 8000596:	60d3      	str	r3, [r2, #12]
		}
		//2. Configure the gpio port selection in sysconfig_extiCR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber /4;
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	791b      	ldrb	r3, [r3, #4]
 800059c:	089b      	lsrs	r3, r3, #2
 800059e:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %4;
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	791b      	ldrb	r3, [r3, #4]
 80005a4:	f003 0303 	and.w	r3, r3, #3
 80005a8:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	4a1c      	ldr	r2, [pc, #112]	@ (8000620 <GPIO_Init+0x180>)
 80005b0:	4293      	cmp	r3, r2
 80005b2:	d045      	beq.n	8000640 <GPIO_Init+0x1a0>
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	4a1a      	ldr	r2, [pc, #104]	@ (8000624 <GPIO_Init+0x184>)
 80005ba:	4293      	cmp	r3, r2
 80005bc:	d02b      	beq.n	8000616 <GPIO_Init+0x176>
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	681b      	ldr	r3, [r3, #0]
 80005c2:	4a19      	ldr	r2, [pc, #100]	@ (8000628 <GPIO_Init+0x188>)
 80005c4:	4293      	cmp	r3, r2
 80005c6:	d024      	beq.n	8000612 <GPIO_Init+0x172>
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	4a17      	ldr	r2, [pc, #92]	@ (800062c <GPIO_Init+0x18c>)
 80005ce:	4293      	cmp	r3, r2
 80005d0:	d01d      	beq.n	800060e <GPIO_Init+0x16e>
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	4a16      	ldr	r2, [pc, #88]	@ (8000630 <GPIO_Init+0x190>)
 80005d8:	4293      	cmp	r3, r2
 80005da:	d016      	beq.n	800060a <GPIO_Init+0x16a>
 80005dc:	687b      	ldr	r3, [r7, #4]
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	4a14      	ldr	r2, [pc, #80]	@ (8000634 <GPIO_Init+0x194>)
 80005e2:	4293      	cmp	r3, r2
 80005e4:	d00f      	beq.n	8000606 <GPIO_Init+0x166>
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	4a13      	ldr	r2, [pc, #76]	@ (8000638 <GPIO_Init+0x198>)
 80005ec:	4293      	cmp	r3, r2
 80005ee:	d008      	beq.n	8000602 <GPIO_Init+0x162>
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	4a11      	ldr	r2, [pc, #68]	@ (800063c <GPIO_Init+0x19c>)
 80005f6:	4293      	cmp	r3, r2
 80005f8:	d101      	bne.n	80005fe <GPIO_Init+0x15e>
 80005fa:	2307      	movs	r3, #7
 80005fc:	e021      	b.n	8000642 <GPIO_Init+0x1a2>
 80005fe:	2300      	movs	r3, #0
 8000600:	e01f      	b.n	8000642 <GPIO_Init+0x1a2>
 8000602:	2306      	movs	r3, #6
 8000604:	e01d      	b.n	8000642 <GPIO_Init+0x1a2>
 8000606:	2305      	movs	r3, #5
 8000608:	e01b      	b.n	8000642 <GPIO_Init+0x1a2>
 800060a:	2304      	movs	r3, #4
 800060c:	e019      	b.n	8000642 <GPIO_Init+0x1a2>
 800060e:	2303      	movs	r3, #3
 8000610:	e017      	b.n	8000642 <GPIO_Init+0x1a2>
 8000612:	2302      	movs	r3, #2
 8000614:	e015      	b.n	8000642 <GPIO_Init+0x1a2>
 8000616:	2301      	movs	r3, #1
 8000618:	e013      	b.n	8000642 <GPIO_Init+0x1a2>
 800061a:	bf00      	nop
 800061c:	40013c00 	.word	0x40013c00
 8000620:	40020000 	.word	0x40020000
 8000624:	40020400 	.word	0x40020400
 8000628:	40020800 	.word	0x40020800
 800062c:	40020c00 	.word	0x40020c00
 8000630:	40021000 	.word	0x40021000
 8000634:	40021400 	.word	0x40021400
 8000638:	40021800 	.word	0x40021800
 800063c:	40021c00 	.word	0x40021c00
 8000640:	2300      	movs	r3, #0
 8000642:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000644:	4b5c      	ldr	r3, [pc, #368]	@ (80007b8 <GPIO_Init+0x318>)
 8000646:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000648:	4a5b      	ldr	r2, [pc, #364]	@ (80007b8 <GPIO_Init+0x318>)
 800064a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800064e:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode <<(temp2 * 4);
 8000650:	7c7a      	ldrb	r2, [r7, #17]
 8000652:	7cbb      	ldrb	r3, [r7, #18]
 8000654:	009b      	lsls	r3, r3, #2
 8000656:	fa02 f103 	lsl.w	r1, r2, r3
 800065a:	4a58      	ldr	r2, [pc, #352]	@ (80007bc <GPIO_Init+0x31c>)
 800065c:	7cfb      	ldrb	r3, [r7, #19]
 800065e:	3302      	adds	r3, #2
 8000660:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. Enable the exti interrupt delivery using IMR (Interrupt mask register)
		EXTI->IMR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000664:	4b56      	ldr	r3, [pc, #344]	@ (80007c0 <GPIO_Init+0x320>)
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	687a      	ldr	r2, [r7, #4]
 800066a:	7912      	ldrb	r2, [r2, #4]
 800066c:	4611      	mov	r1, r2
 800066e:	2201      	movs	r2, #1
 8000670:	408a      	lsls	r2, r1
 8000672:	4611      	mov	r1, r2
 8000674:	4a52      	ldr	r2, [pc, #328]	@ (80007c0 <GPIO_Init+0x320>)
 8000676:	430b      	orrs	r3, r1
 8000678:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 800067a:	2300      	movs	r3, #0
 800067c:	617b      	str	r3, [r7, #20]

	//Configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	799b      	ldrb	r3, [r3, #6]
 8000682:	461a      	mov	r2, r3
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	791b      	ldrb	r3, [r3, #4]
 8000688:	005b      	lsls	r3, r3, #1
 800068a:	fa02 f303 	lsl.w	r3, r2, r3
 800068e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	681b      	ldr	r3, [r3, #0]
 8000694:	689a      	ldr	r2, [r3, #8]
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	791b      	ldrb	r3, [r3, #4]
 800069a:	4619      	mov	r1, r3
 800069c:	2303      	movs	r3, #3
 800069e:	408b      	lsls	r3, r1
 80006a0:	43db      	mvns	r3, r3
 80006a2:	4619      	mov	r1, r3
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	400a      	ands	r2, r1
 80006aa:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	6899      	ldr	r1, [r3, #8]
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	697a      	ldr	r2, [r7, #20]
 80006b8:	430a      	orrs	r2, r1
 80006ba:	609a      	str	r2, [r3, #8]
	temp = 0;
 80006bc:	2300      	movs	r3, #0
 80006be:	617b      	str	r3, [r7, #20]

	//Configure the PU/PD settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	79db      	ldrb	r3, [r3, #7]
 80006c4:	461a      	mov	r2, r3
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	791b      	ldrb	r3, [r3, #4]
 80006ca:	005b      	lsls	r3, r3, #1
 80006cc:	fa02 f303 	lsl.w	r3, r2, r3
 80006d0:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	681b      	ldr	r3, [r3, #0]
 80006d6:	68da      	ldr	r2, [r3, #12]
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	791b      	ldrb	r3, [r3, #4]
 80006dc:	4619      	mov	r1, r3
 80006de:	2303      	movs	r3, #3
 80006e0:	408b      	lsls	r3, r1
 80006e2:	43db      	mvns	r3, r3
 80006e4:	4619      	mov	r1, r3
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	681b      	ldr	r3, [r3, #0]
 80006ea:	400a      	ands	r2, r1
 80006ec:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	681b      	ldr	r3, [r3, #0]
 80006f2:	68d9      	ldr	r1, [r3, #12]
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	697a      	ldr	r2, [r7, #20]
 80006fa:	430a      	orrs	r2, r1
 80006fc:	60da      	str	r2, [r3, #12]
	temp = 0;
 80006fe:	2300      	movs	r3, #0
 8000700:	617b      	str	r3, [r7, #20]

	//Configure the Output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000702:	687b      	ldr	r3, [r7, #4]
 8000704:	7a1b      	ldrb	r3, [r3, #8]
 8000706:	461a      	mov	r2, r3
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	791b      	ldrb	r3, [r3, #4]
 800070c:	fa02 f303 	lsl.w	r3, r2, r3
 8000710:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	681b      	ldr	r3, [r3, #0]
 8000716:	685a      	ldr	r2, [r3, #4]
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	791b      	ldrb	r3, [r3, #4]
 800071c:	4619      	mov	r1, r3
 800071e:	2301      	movs	r3, #1
 8000720:	408b      	lsls	r3, r1
 8000722:	43db      	mvns	r3, r3
 8000724:	4619      	mov	r1, r3
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	681b      	ldr	r3, [r3, #0]
 800072a:	400a      	ands	r2, r1
 800072c:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	6859      	ldr	r1, [r3, #4]
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	681b      	ldr	r3, [r3, #0]
 8000738:	697a      	ldr	r2, [r7, #20]
 800073a:	430a      	orrs	r2, r1
 800073c:	605a      	str	r2, [r3, #4]
	temp = 0;
 800073e:	2300      	movs	r3, #0
 8000740:	617b      	str	r3, [r7, #20]

	//Configure the alternate functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	795b      	ldrb	r3, [r3, #5]
 8000746:	2b02      	cmp	r3, #2
 8000748:	d131      	bne.n	80007ae <GPIO_Init+0x30e>
	{
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	791b      	ldrb	r3, [r3, #4]
 800074e:	08db      	lsrs	r3, r3, #3
 8000750:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	791b      	ldrb	r3, [r3, #4]
 8000756:	f003 0307 	and.w	r3, r3, #7
 800075a:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF<<(4*temp2));
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	7c3a      	ldrb	r2, [r7, #16]
 8000762:	3208      	adds	r2, #8
 8000764:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000768:	7bfb      	ldrb	r3, [r7, #15]
 800076a:	009b      	lsls	r3, r3, #2
 800076c:	220f      	movs	r2, #15
 800076e:	fa02 f303 	lsl.w	r3, r2, r3
 8000772:	43db      	mvns	r3, r3
 8000774:	4618      	mov	r0, r3
 8000776:	687b      	ldr	r3, [r7, #4]
 8000778:	681b      	ldr	r3, [r3, #0]
 800077a:	7c3a      	ldrb	r2, [r7, #16]
 800077c:	4001      	ands	r1, r0
 800077e:	3208      	adds	r2, #8
 8000780:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFnMode << (4*temp2));
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	681b      	ldr	r3, [r3, #0]
 8000788:	7c3a      	ldrb	r2, [r7, #16]
 800078a:	3208      	adds	r2, #8
 800078c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	7a5b      	ldrb	r3, [r3, #9]
 8000794:	461a      	mov	r2, r3
 8000796:	7bfb      	ldrb	r3, [r7, #15]
 8000798:	009b      	lsls	r3, r3, #2
 800079a:	fa02 f303 	lsl.w	r3, r2, r3
 800079e:	4618      	mov	r0, r3
 80007a0:	687b      	ldr	r3, [r7, #4]
 80007a2:	681b      	ldr	r3, [r3, #0]
 80007a4:	7c3a      	ldrb	r2, [r7, #16]
 80007a6:	4301      	orrs	r1, r0
 80007a8:	3208      	adds	r2, #8
 80007aa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}
}
 80007ae:	bf00      	nop
 80007b0:	371c      	adds	r7, #28
 80007b2:	46bd      	mov	sp, r7
 80007b4:	bc80      	pop	{r7}
 80007b6:	4770      	bx	lr
 80007b8:	40023800 	.word	0x40023800
 80007bc:	40013800 	.word	0x40013800
 80007c0:	40013c00 	.word	0x40013c00

080007c4 <GPIO_TogglePin>:
 * @return	- none
 *
 * @note	- none
 */
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx,uint8_t PinNumber)
{
 80007c4:	b480      	push	{r7}
 80007c6:	b083      	sub	sp, #12
 80007c8:	af00      	add	r7, sp, #0
 80007ca:	6078      	str	r0, [r7, #4]
 80007cc:	460b      	mov	r3, r1
 80007ce:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	695b      	ldr	r3, [r3, #20]
 80007d4:	78fa      	ldrb	r2, [r7, #3]
 80007d6:	2101      	movs	r1, #1
 80007d8:	fa01 f202 	lsl.w	r2, r1, r2
 80007dc:	405a      	eors	r2, r3
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	615a      	str	r2, [r3, #20]
}
 80007e2:	bf00      	nop
 80007e4:	370c      	adds	r7, #12
 80007e6:	46bd      	mov	sp, r7
 80007e8:	bc80      	pop	{r7}
 80007ea:	4770      	bx	lr

080007ec <GPIO_IRQConfig>:
 * @return	- none
 *
 * @note	- none
 */
void GPIO_IRQConfig(uint8_t IRQPosition, bool status)
{
 80007ec:	b480      	push	{r7}
 80007ee:	b083      	sub	sp, #12
 80007f0:	af00      	add	r7, sp, #0
 80007f2:	4603      	mov	r3, r0
 80007f4:	460a      	mov	r2, r1
 80007f6:	71fb      	strb	r3, [r7, #7]
 80007f8:	4613      	mov	r3, r2
 80007fa:	71bb      	strb	r3, [r7, #6]
	if(status == ENABLE)
 80007fc:	79bb      	ldrb	r3, [r7, #6]
 80007fe:	2b00      	cmp	r3, #0
 8000800:	d033      	beq.n	800086a <GPIO_IRQConfig+0x7e>
	{
		if(IRQPosition < 32)
 8000802:	79fb      	ldrb	r3, [r7, #7]
 8000804:	2b1f      	cmp	r3, #31
 8000806:	d80a      	bhi.n	800081e <GPIO_IRQConfig+0x32>
		{
			//Program the ISER0 register
			*NVIC_ISER0 |= (1<<IRQPosition);
 8000808:	4b34      	ldr	r3, [pc, #208]	@ (80008dc <GPIO_IRQConfig+0xf0>)
 800080a:	681b      	ldr	r3, [r3, #0]
 800080c:	79fa      	ldrb	r2, [r7, #7]
 800080e:	2101      	movs	r1, #1
 8000810:	fa01 f202 	lsl.w	r2, r1, r2
 8000814:	4611      	mov	r1, r2
 8000816:	4a31      	ldr	r2, [pc, #196]	@ (80008dc <GPIO_IRQConfig+0xf0>)
 8000818:	430b      	orrs	r3, r1
 800081a:	6013      	str	r3, [r2, #0]
		{
			//Program the ICER2 register
			*NVIC_ICER2 |= (1<<(IRQPosition%64));
		}
	}
}
 800081c:	e059      	b.n	80008d2 <GPIO_IRQConfig+0xe6>
		else if(IRQPosition>31 && IRQPosition<64)
 800081e:	79fb      	ldrb	r3, [r7, #7]
 8000820:	2b1f      	cmp	r3, #31
 8000822:	d90f      	bls.n	8000844 <GPIO_IRQConfig+0x58>
 8000824:	79fb      	ldrb	r3, [r7, #7]
 8000826:	2b3f      	cmp	r3, #63	@ 0x3f
 8000828:	d80c      	bhi.n	8000844 <GPIO_IRQConfig+0x58>
			*NVIC_ISER1 |= (1<<(IRQPosition%32));
 800082a:	4b2d      	ldr	r3, [pc, #180]	@ (80008e0 <GPIO_IRQConfig+0xf4>)
 800082c:	681b      	ldr	r3, [r3, #0]
 800082e:	79fa      	ldrb	r2, [r7, #7]
 8000830:	f002 021f 	and.w	r2, r2, #31
 8000834:	2101      	movs	r1, #1
 8000836:	fa01 f202 	lsl.w	r2, r1, r2
 800083a:	4611      	mov	r1, r2
 800083c:	4a28      	ldr	r2, [pc, #160]	@ (80008e0 <GPIO_IRQConfig+0xf4>)
 800083e:	430b      	orrs	r3, r1
 8000840:	6013      	str	r3, [r2, #0]
 8000842:	e046      	b.n	80008d2 <GPIO_IRQConfig+0xe6>
		else if(IRQPosition>63 && IRQPosition<96)
 8000844:	79fb      	ldrb	r3, [r7, #7]
 8000846:	2b3f      	cmp	r3, #63	@ 0x3f
 8000848:	d943      	bls.n	80008d2 <GPIO_IRQConfig+0xe6>
 800084a:	79fb      	ldrb	r3, [r7, #7]
 800084c:	2b5f      	cmp	r3, #95	@ 0x5f
 800084e:	d840      	bhi.n	80008d2 <GPIO_IRQConfig+0xe6>
			*NVIC_ISER2 |= (1<<(IRQPosition%64));
 8000850:	4b24      	ldr	r3, [pc, #144]	@ (80008e4 <GPIO_IRQConfig+0xf8>)
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	79fa      	ldrb	r2, [r7, #7]
 8000856:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800085a:	2101      	movs	r1, #1
 800085c:	fa01 f202 	lsl.w	r2, r1, r2
 8000860:	4611      	mov	r1, r2
 8000862:	4a20      	ldr	r2, [pc, #128]	@ (80008e4 <GPIO_IRQConfig+0xf8>)
 8000864:	430b      	orrs	r3, r1
 8000866:	6013      	str	r3, [r2, #0]
}
 8000868:	e033      	b.n	80008d2 <GPIO_IRQConfig+0xe6>
		if(IRQPosition < 32)
 800086a:	79fb      	ldrb	r3, [r7, #7]
 800086c:	2b1f      	cmp	r3, #31
 800086e:	d80a      	bhi.n	8000886 <GPIO_IRQConfig+0x9a>
			*NVIC_ICER0 |= (1<<IRQPosition);
 8000870:	4b1d      	ldr	r3, [pc, #116]	@ (80008e8 <GPIO_IRQConfig+0xfc>)
 8000872:	681b      	ldr	r3, [r3, #0]
 8000874:	79fa      	ldrb	r2, [r7, #7]
 8000876:	2101      	movs	r1, #1
 8000878:	fa01 f202 	lsl.w	r2, r1, r2
 800087c:	4611      	mov	r1, r2
 800087e:	4a1a      	ldr	r2, [pc, #104]	@ (80008e8 <GPIO_IRQConfig+0xfc>)
 8000880:	430b      	orrs	r3, r1
 8000882:	6013      	str	r3, [r2, #0]
}
 8000884:	e025      	b.n	80008d2 <GPIO_IRQConfig+0xe6>
		else if(IRQPosition>31 && IRQPosition<64)
 8000886:	79fb      	ldrb	r3, [r7, #7]
 8000888:	2b1f      	cmp	r3, #31
 800088a:	d90f      	bls.n	80008ac <GPIO_IRQConfig+0xc0>
 800088c:	79fb      	ldrb	r3, [r7, #7]
 800088e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000890:	d80c      	bhi.n	80008ac <GPIO_IRQConfig+0xc0>
			*NVIC_ICER1 |= (1<<(IRQPosition%32));
 8000892:	4b16      	ldr	r3, [pc, #88]	@ (80008ec <GPIO_IRQConfig+0x100>)
 8000894:	681b      	ldr	r3, [r3, #0]
 8000896:	79fa      	ldrb	r2, [r7, #7]
 8000898:	f002 021f 	and.w	r2, r2, #31
 800089c:	2101      	movs	r1, #1
 800089e:	fa01 f202 	lsl.w	r2, r1, r2
 80008a2:	4611      	mov	r1, r2
 80008a4:	4a11      	ldr	r2, [pc, #68]	@ (80008ec <GPIO_IRQConfig+0x100>)
 80008a6:	430b      	orrs	r3, r1
 80008a8:	6013      	str	r3, [r2, #0]
 80008aa:	e012      	b.n	80008d2 <GPIO_IRQConfig+0xe6>
		else if(IRQPosition>63 && IRQPosition<96)
 80008ac:	79fb      	ldrb	r3, [r7, #7]
 80008ae:	2b3f      	cmp	r3, #63	@ 0x3f
 80008b0:	d90f      	bls.n	80008d2 <GPIO_IRQConfig+0xe6>
 80008b2:	79fb      	ldrb	r3, [r7, #7]
 80008b4:	2b5f      	cmp	r3, #95	@ 0x5f
 80008b6:	d80c      	bhi.n	80008d2 <GPIO_IRQConfig+0xe6>
			*NVIC_ICER2 |= (1<<(IRQPosition%64));
 80008b8:	4b0d      	ldr	r3, [pc, #52]	@ (80008f0 <GPIO_IRQConfig+0x104>)
 80008ba:	681b      	ldr	r3, [r3, #0]
 80008bc:	79fa      	ldrb	r2, [r7, #7]
 80008be:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80008c2:	2101      	movs	r1, #1
 80008c4:	fa01 f202 	lsl.w	r2, r1, r2
 80008c8:	4611      	mov	r1, r2
 80008ca:	4a09      	ldr	r2, [pc, #36]	@ (80008f0 <GPIO_IRQConfig+0x104>)
 80008cc:	430b      	orrs	r3, r1
 80008ce:	6013      	str	r3, [r2, #0]
}
 80008d0:	e7ff      	b.n	80008d2 <GPIO_IRQConfig+0xe6>
 80008d2:	bf00      	nop
 80008d4:	370c      	adds	r7, #12
 80008d6:	46bd      	mov	sp, r7
 80008d8:	bc80      	pop	{r7}
 80008da:	4770      	bx	lr
 80008dc:	e000e100 	.word	0xe000e100
 80008e0:	e000e104 	.word	0xe000e104
 80008e4:	e000e108 	.word	0xe000e108
 80008e8:	e000e180 	.word	0xe000e180
 80008ec:	e000e184 	.word	0xe000e184
 80008f0:	e000e188 	.word	0xe000e188

080008f4 <GPIO_IRQPriorityConfig>:


void GPIO_IRQPriorityConfig(uint8_t IRQPosition, uint32_t IRQPriority)
{
 80008f4:	b480      	push	{r7}
 80008f6:	b085      	sub	sp, #20
 80008f8:	af00      	add	r7, sp, #0
 80008fa:	4603      	mov	r3, r0
 80008fc:	6039      	str	r1, [r7, #0]
 80008fe:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx = IRQPosition/4;
 8000900:	79fb      	ldrb	r3, [r7, #7]
 8000902:	089b      	lsrs	r3, r3, #2
 8000904:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQPosition%4;
 8000906:	79fb      	ldrb	r3, [r7, #7]
 8000908:	f003 0303 	and.w	r3, r3, #3
 800090c:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = (8*iprx_section) + (8-NO_PRIORITY_BITS_IMPLEMENTED);
 800090e:	7bbb      	ldrb	r3, [r7, #14]
 8000910:	00db      	lsls	r3, r3, #3
 8000912:	b2db      	uxtb	r3, r3
 8000914:	3304      	adds	r3, #4
 8000916:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 8000918:	7bfb      	ldrb	r3, [r7, #15]
 800091a:	009b      	lsls	r3, r3, #2
 800091c:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000920:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000924:	6819      	ldr	r1, [r3, #0]
 8000926:	7b7b      	ldrb	r3, [r7, #13]
 8000928:	683a      	ldr	r2, [r7, #0]
 800092a:	409a      	lsls	r2, r3
 800092c:	7bfb      	ldrb	r3, [r7, #15]
 800092e:	009b      	lsls	r3, r3, #2
 8000930:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000934:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000938:	430a      	orrs	r2, r1
 800093a:	601a      	str	r2, [r3, #0]
}
 800093c:	bf00      	nop
 800093e:	3714      	adds	r7, #20
 8000940:	46bd      	mov	sp, r7
 8000942:	bc80      	pop	{r7}
 8000944:	4770      	bx	lr
	...

08000948 <GPIO_IRQHandling>:
 * @return	- none
 *
 * @note	- none
 */
void GPIO_IRQHandling(uint8_t pinNumber)
{
 8000948:	b480      	push	{r7}
 800094a:	b083      	sub	sp, #12
 800094c:	af00      	add	r7, sp, #0
 800094e:	4603      	mov	r3, r0
 8000950:	71fb      	strb	r3, [r7, #7]
	//Clear the EXTI_PR register corresponding to the pin number
	if(EXTI->PR & (1<<pinNumber))
 8000952:	4b0c      	ldr	r3, [pc, #48]	@ (8000984 <GPIO_IRQHandling+0x3c>)
 8000954:	695b      	ldr	r3, [r3, #20]
 8000956:	79fa      	ldrb	r2, [r7, #7]
 8000958:	2101      	movs	r1, #1
 800095a:	fa01 f202 	lsl.w	r2, r1, r2
 800095e:	4013      	ands	r3, r2
 8000960:	2b00      	cmp	r3, #0
 8000962:	d009      	beq.n	8000978 <GPIO_IRQHandling+0x30>
	{
		EXTI->PR |= (1<<pinNumber);
 8000964:	4b07      	ldr	r3, [pc, #28]	@ (8000984 <GPIO_IRQHandling+0x3c>)
 8000966:	695b      	ldr	r3, [r3, #20]
 8000968:	79fa      	ldrb	r2, [r7, #7]
 800096a:	2101      	movs	r1, #1
 800096c:	fa01 f202 	lsl.w	r2, r1, r2
 8000970:	4611      	mov	r1, r2
 8000972:	4a04      	ldr	r2, [pc, #16]	@ (8000984 <GPIO_IRQHandling+0x3c>)
 8000974:	430b      	orrs	r3, r1
 8000976:	6153      	str	r3, [r2, #20]
	}
}
 8000978:	bf00      	nop
 800097a:	370c      	adds	r7, #12
 800097c:	46bd      	mov	sp, r7
 800097e:	bc80      	pop	{r7}
 8000980:	4770      	bx	lr
 8000982:	bf00      	nop
 8000984:	40013c00 	.word	0x40013c00

08000988 <memset>:
 8000988:	4402      	add	r2, r0
 800098a:	4603      	mov	r3, r0
 800098c:	4293      	cmp	r3, r2
 800098e:	d100      	bne.n	8000992 <memset+0xa>
 8000990:	4770      	bx	lr
 8000992:	f803 1b01 	strb.w	r1, [r3], #1
 8000996:	e7f9      	b.n	800098c <memset+0x4>

08000998 <__libc_init_array>:
 8000998:	b570      	push	{r4, r5, r6, lr}
 800099a:	4d0d      	ldr	r5, [pc, #52]	@ (80009d0 <__libc_init_array+0x38>)
 800099c:	4c0d      	ldr	r4, [pc, #52]	@ (80009d4 <__libc_init_array+0x3c>)
 800099e:	1b64      	subs	r4, r4, r5
 80009a0:	10a4      	asrs	r4, r4, #2
 80009a2:	2600      	movs	r6, #0
 80009a4:	42a6      	cmp	r6, r4
 80009a6:	d109      	bne.n	80009bc <__libc_init_array+0x24>
 80009a8:	4d0b      	ldr	r5, [pc, #44]	@ (80009d8 <__libc_init_array+0x40>)
 80009aa:	4c0c      	ldr	r4, [pc, #48]	@ (80009dc <__libc_init_array+0x44>)
 80009ac:	f000 f818 	bl	80009e0 <_init>
 80009b0:	1b64      	subs	r4, r4, r5
 80009b2:	10a4      	asrs	r4, r4, #2
 80009b4:	2600      	movs	r6, #0
 80009b6:	42a6      	cmp	r6, r4
 80009b8:	d105      	bne.n	80009c6 <__libc_init_array+0x2e>
 80009ba:	bd70      	pop	{r4, r5, r6, pc}
 80009bc:	f855 3b04 	ldr.w	r3, [r5], #4
 80009c0:	4798      	blx	r3
 80009c2:	3601      	adds	r6, #1
 80009c4:	e7ee      	b.n	80009a4 <__libc_init_array+0xc>
 80009c6:	f855 3b04 	ldr.w	r3, [r5], #4
 80009ca:	4798      	blx	r3
 80009cc:	3601      	adds	r6, #1
 80009ce:	e7f2      	b.n	80009b6 <__libc_init_array+0x1e>
 80009d0:	080009f8 	.word	0x080009f8
 80009d4:	080009f8 	.word	0x080009f8
 80009d8:	080009f8 	.word	0x080009f8
 80009dc:	080009fc 	.word	0x080009fc

080009e0 <_init>:
 80009e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009e2:	bf00      	nop
 80009e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009e6:	bc08      	pop	{r3}
 80009e8:	469e      	mov	lr, r3
 80009ea:	4770      	bx	lr

080009ec <_fini>:
 80009ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ee:	bf00      	nop
 80009f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009f2:	bc08      	pop	{r3}
 80009f4:	469e      	mov	lr, r3
 80009f6:	4770      	bx	lr
